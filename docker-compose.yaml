services:
  client:
    container_name: client
    build:
      context: ./packages/client
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      - ./packages/client/src:/usr/src/client/src
      - client-build:/usr/src/client/dist
    ports:
      - "5173:5173"
    env_file:
      - .env
    environment:
      - VITE_SERVER_URL=http://server:3001
    depends_on:
      server:
        condition: service_healthy

  server:
    container_name: server
    build:
      context: ./packages/server
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      - ./packages/server/src:/usr/src/server/src
      - ./packages/server/migrations:/usr/src/server/migrations
      - client-build:/usr/src/client/dist
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://server:3001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    container_name: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    user: root
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 40 # CRITICAL level
      PGADMIN_CONFIG_FILE_LOG_LEVEL: 40 # Disable file logging
    ports:
      - 5050:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    logging:
      driver: "none"

volumes:
  db-data:
  client-build:
  pgadmin:
