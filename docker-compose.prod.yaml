services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network

  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:3001"
    ports:
      - "3001:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network

  app:
    image: ghcr.io/nathangrenier/soen-343:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3001"
    secrets:
      - db-password
    env_file:
      - .env
    environment:
      - VITE_SERVER_URL=http://app:3001
      - NODE_ENV=production
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    deploy:
      mode: replicated
      replicas: 3
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - traefik-network

  db:
    image: postgres
    container_name: postgres
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - traefik-network

networks:
  traefik-network:
    driver: bridge

volumes:
  db-data:

secrets:
  db-password:
    file: db-secrets/password.txt
